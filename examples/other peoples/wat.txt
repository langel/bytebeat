delay = function(sample)
{
	if (t == 0)
	{
		iir = 0;
		hiir = 0;
		size = 20000;
		delaybuf = [];
		for (let i = 0; i < size; i += 1)
			delaybuf.push(0.0);
		idx = 0;
	}

	idx = (idx + 1) % size;
	iir -= (iir - delaybuf[idx]) / 10;
	delaybuf[(idx + size) % size] = sample * 0.5 + iir * 0.7;
	
	outsamp = delaybuf[(idx + 1) % size];
	hiir += (outsamp - hiir) / 32;
	return outsamp - hiir;
},

beat = t / 4000,
note = (floor(beat) % 4) * 7 + pow(floor((beat / 16) % 4), 1.5) - 6,
base = t / 54 *  pow(2, (note) / 12),
base = base * 1,
w = 0,
sweep = t / 5000,
pm = 1.7,
w += sin(base),
w += sin(0 * pm + sweep) * sin(base*2)/2,
w += sin(1 * pm + sweep) * sin(base*3)/3,
w += sin(2 * pm + sweep) * sin(base*4)/4,
w += sin(3 * pm + sweep) * sin(base*5)/5,
w += sin(4 * pm + sweep) * sin(base*6)/6,
w += sin(5 * pm + sweep) * sin(base*7)/7,
w += sin(6 * pm + sweep) * sin(base*8)/8,
w += sin(7 * pm + sweep) * sin(base*10)/9,
w += sin(8 * pm + sweep) * sin(base*11)/10,
w += sin(9 * pm + sweep) * sin(base*12)/11,
w += sin(10 * pm + sweep) * sin(base*13)/12,
w = min(1,max(-1,w * 2)) * 0.5,
amp = 1 - (beat % 1) * abs(sin(beat) * 1.2),
amp = amp * amp,
w *= amp,
d = delay(w),

w + d